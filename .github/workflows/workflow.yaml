name: Release VSCode Extension

# 触发条件：当main或master分支有提交时触发
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:  # 允许手动触发

# 添加权限配置
permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码仓库
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整的git历史用于生成changelog

      # 2. 全局安装 pnpm
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10.8.1
          run_install: false

      # 3. 设置 Node.js 环境并缓存 pnpm 依赖
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # 4. 安装项目依赖
      - name: Install Dependencies
        run: pnpm install

      # 5. 打包 VSCode 扩展（这会自动更新package.json中的版本号）
      - name: Package VSCode Extension
        run: pnpm run vscode:package

      # 6. Bump version and push tag
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # 7. 生成 Changelog
      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 8. 创建 GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.tag_version.outputs.new_tag }}
          release_name: Release v${{ steps.tag_version.outputs.new_version }}
          body: ${{steps.build_changelog.outputs.changelog}}
          draft: true
          prerelease: false

      # 9. 上传 .vsix 文件到 Release 作为资产
      - name: Upload VSIX to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./*.vsix
          asset_name: ai-git-commiter-v${{ steps.tag_version.outputs.new_version }}.vsix
          asset_content_type: application/octet-stream
